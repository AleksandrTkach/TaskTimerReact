{"version":3,"sources":["components/Dialog.js","containers/Timer/Button/Button.js","utils/constants.js","utils/utils.js","store/types.js","store/actions/index.js","containers/Timer/Timer.js","containers/Tasks/TableLog/TasksNotFound.js","containers/Tasks/TableLog/TasksRows/BtnInfo.js","containers/Tasks/TableLog/TasksRows/BtnRemove.js","containers/Tasks/TableLog/TasksRows/TasksRows.js","containers/Tasks/TableLog/TableLog.js","containers/Tasks/Chart/BtnGenerate.js","containers/Tasks/Chart/Chart.js","containers/Tasks/Tabs.js","store/reducers/tasks.js","store/reducers/chartColumns.js","store/reducers/index.js","store/sagas/buildChart.js","store/sagas/index.js","store/index.js","components/App.js","serviceWorker.js","index.js"],"names":["FormDialog","_this$props","this","props","_this$props$dialogTit","dialogTitle","dialogContentText","isOpenDialog","clickDialogClose","clickDialogSuccess","_this$props$btnSucces","btnSuccessText","_this$props$btnReject","btnRejectText","react_default","a","createElement","Dialog","open","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","children","DialogActions","Button","onClick","color","React","Component","TimerButton","_this","Button_default","variant","className","toggleStatusTimer","start","stop","reset","isStartTimer","AMOUNT_TASKS","TASK_DURATION","MIN","MAX","getLS","key","arguments","length","undefined","Number","localStorage","getItem","JSON","parse","setLS","value","setItem","stringify","currentTime","Date","getTime","generateNewTasks","date","amountTasks","_getRandomNumber","timeStart","getFullYear","getMonth","getDate","newTasks","i","timeEnd","_getNextTime","push","taskName","concat","timeSpend","time","min","max","Math","round","random","changeTaskFormat","tasks","map","task","startHour","moment","format","startMin","startSec","endHour","endMin","endSec","setChartColumns","chartColumns","newTasksFormat","columns","Object","toConsumableArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","diffHour","hour","uv","err","return","getDefaultChartColumns","name","BUILD_CHART","setTask","payload","type","buildChart","types","buildChartSuccess","buildChartReset","Timer","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","_toggleDialogTaskNoName","_addTaskLog","setState","handleChangeTaskName","event","target","initialTime","isOpenDialogNoName","status","_getFormatValue","text","_this2","_this$state","Dialog_FormDialog","clickDialogOpen","build","startImmediately","formatValue","_ref","Fragment","TextField","onChange","placeholder","Paper","Hours","Minutes","Seconds","Button_TimerButton","mapDispatchToProps","connect","_ref2","TasksNotFound","TableRow","TableCell","align","colSpan","BtnInfo","_toggleDialogInfo","isOpenDialogInfo","styleButton","getFormatTime","style","Table","TableBody","BtnRemove","_toggleDialogRemove","isOpenDialogRemove","taskIndex","removeTask","index","background","borderRadius","TasksRows","isUTC","utc","_getTimeEnd","component","scope","TasksRows_BtnInfo","TasksRows_BtnRemove","useStyles","makeStyles","root","width","overflowX","table","minWidth","tableHeads","classes","TableHead","tableHead","TableLog_TasksRows_TasksRows","TasksNotFound_TasksNotFound","BtnGenerate","_generate","_callee","regenerator_default","wrap","_context","prev","resetTasks","sent","refreshTasks","Chart","es6","height","data","stroke","dataKey","domain","barSize","fill","label","renderLabel","Tasks_Chart_BtnGenerate","PureComponent","x","y","dy","textAnchor","NavTabs","handleChange","newValue","location","pathname","AppBar","position","Tabs","Tab","Link","to","react_router","path","TasksLog","TasksChart","withRouter","initState","action","splice","combineReducers","watchBuildChart","chartColumnsWithValue","put","select","t0","console","log","_marked","_context2","takeEvery","_marked2","rootSaga","all","sagas_marked","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","run","App","es","Container","react_router_dom","containers_Timer_Timer","containers_Tasks_Tabs","Boolean","window","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.df257234.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default class FormDialog extends React.Component {\n\trender() {\n\t\tconst {\n\t\t\tdialogTitle = '',\n\t\t\tdialogContentText,\n\t\t\tisOpenDialog,\n\t\t\tclickDialogClose,\n\t\t\tclickDialogSuccess,\n\t\t\tbtnSuccessText = 'Close',\n\t\t\tbtnRejectText = null,\n\t\t} = this.props;\n\n\t\treturn (\n\t\t\t<Dialog\n\t\t\t\topen={isOpenDialog}\n\t\t\t\tonClose={clickDialogClose}\n\t\t\t\taria-labelledby=\"form-dialog-title\"\n\t\t\t>\n\t\t\t\t<DialogTitle id=\"form-dialog-title\">{dialogTitle}</DialogTitle>\n\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<DialogContentText>{dialogContentText}</DialogContentText>\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</DialogContent>\n\n\t\t\t\t<DialogActions>\n\t\t\t\t\t{btnRejectText !== null ? (\n\t\t\t\t\t\t<Button onClick={clickDialogClose} color=\"primary\">\n\t\t\t\t\t\t\t{btnRejectText}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t) : null}\n\t\t\t\t\t<Button onClick={clickDialogSuccess} color=\"primary\">\n\t\t\t\t\t\t{btnSuccessText}\n\t\t\t\t\t</Button>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './Button.scss';\n\nexport default class TimerButton extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<Button\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tclassName={'btn'}\n\t\t\t\tonClick={() =>\n\t\t\t\t\tthis.props.toggleStatusTimer(\n\t\t\t\t\t\tthis.props.start,\n\t\t\t\t\t\tthis.props.stop,\n\t\t\t\t\t\tthis.props.reset\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{!this.props.isStartTimer ? 'Start' : 'Stop'}\n\t\t\t</Button>\n\t\t);\n\t}\n}\n","export const AMOUNT_TASKS = {\n\tMIN: 10,\n\tMAX: 15,\n};\nexport const TASK_DURATION = {\n\tMIN: 10,\n\tMAX: 90,\n};\nexport const MIN = 1000 * 60;\n","import { MIN, TASK_DURATION, AMOUNT_TASKS } from 'utils/constants';\nimport moment from 'moment';\n\nexport const getLS = (key, isNumber = true) =>\n\tisNumber\n\t\t? Number(localStorage.getItem(key))\n\t\t: JSON.parse(localStorage.getItem(key));\n\nexport const setLS = (key, value, isNumber = true) =>\n\tisNumber\n\t\t? localStorage.setItem(key, value)\n\t\t: localStorage.setItem(key, JSON.stringify(value));\n\nexport const currentTime = () => new Date().getTime();\n\nexport const generateNewTasks = () => {\n\tconst date = new Date();\n\tconst amountTasks = _getRandomNumber(AMOUNT_TASKS.MIN, AMOUNT_TASKS.MAX);\n\tlet timeStart = Number(\n\t\tnew Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime()\n\t);\n\n\tconst newTasks = [];\n\tfor (let i = 0; i < amountTasks; i++) {\n\t\tconst timeEnd = _getNextTime(timeStart);\n\n\t\tnewTasks.push({\n\t\t\ttaskName: `Task ${i}`,\n\t\t\ttimeStart,\n\t\t\ttimeEnd,\n\t\t\ttimeSpend: timeEnd - timeStart,\n\t\t});\n\n\t\ttimeStart = _getNextTime(timeEnd);\n\t}\n\treturn newTasks;\n};\n\nfunction _getNextTime(time) {\n\treturn time + _getRandomNumber(TASK_DURATION.MIN, TASK_DURATION.MAX) * MIN;\n}\nfunction _getRandomNumber(min, max) {\n\treturn Math.round(Math.random() * (max - min) + min);\n}\n\nexport const changeTaskFormat = tasks =>\n\ttasks.map(task => {\n\t\treturn {\n\t\t\tstartHour: Number(moment(task.timeStart).format('H')),\n\t\t\tstartMin: Number(moment(task.timeStart).format('m')),\n\t\t\tstartSec: Number(moment(task.timeStart).format('s')),\n\n\t\t\tendHour: Number(moment(task.timeEnd).format('H')),\n\t\t\tendMin: Number(moment(task.timeEnd).format('m')),\n\t\t\tendSec: Number(moment(task.timeEnd).format('s')),\n\t\t};\n\t});\n\nexport const setChartColumns = (chartColumns, newTasksFormat) => {\n\tlet columns = [...chartColumns];\n\n\tfor (const task of newTasksFormat) {\n\t\tconst diffHour = task.endHour - task.startHour;\n\n\t\tif (diffHour > 0) {\n\t\t\tfor (let hour = task.startHour; hour < task.endHour; hour++) {\n\t\t\t\tif (task.startHour === hour) {\n\t\t\t\t\tcolumns[hour].uv += 60 - task.startMin;\n\t\t\t\t} else {\n\t\t\t\t\tcolumns[hour].uv += 60;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcolumns[task.endHour].uv += task.endMin;\n\t\t} else if (diffHour === 0) {\n\t\t\tcolumns[task.endHour].uv += task.endMin - task.startMin;\n\t\t}\n\t}\n\n\treturn columns;\n};\n\nexport const getDefaultChartColumns = () => {\n\tconst columns = [];\n\tfor (let i = 0; i < 24; i++) {\n\t\tcolumns.push({\n\t\t\tname: i,\n\t\t\tuv: 0,\n\t\t});\n\t}\n\treturn columns;\n};\n","export const SET_TASK = 'SET_TASK';\nexport const REMOVE_TASK = 'REMOVE_TASK';\nexport const REFRESH_TASKS = 'REFRESH_TASKS';\nexport const RESET_TASKS = 'RESET_TASKS';\n\nexport const GET_LOCAL_STORAGE = 'GET_LOCAL_STORAGE';\nexport const GET_LOCAL_STORAGE_SUCCESS = 'GET_LOCAL_STORAGE_SUCCESS';\nexport const GET_LOCAL_STORAGE_ERROR = 'GET_LOCAL_STORAGE_ERROR';\n\nexport const SET_LOCAL_STORAGE = 'SET_LOCAL_STORAGE';\nexport const SET_LOCAL_STORAGE_SUCCESS = 'SET_LOCAL_STORAGE_SUCCESS';\nexport const SET_LOCAL_STORAGE_ERROR = 'SET_LOCAL_STORAGE_ERROR';\n\nexport const BUILD_CHART = 'BUILD_CHART';\nexport const BUILD_CHART_SUCCESS = 'BUILD_CHART_SUCCESS';\nexport const BUILD_CHART_RESET = 'BUILD_CHART_RESET';\n","import * as types from 'store/types';\n\nexport const setTask = payload => {\n\treturn {\n\t\ttype: types.SET_TASK,\n\t\tpayload,\n\t};\n};\n\nexport const removeTask = index => {\n\treturn {\n\t\ttype: types.REMOVE_TASK,\n\t\tindex,\n\t};\n};\n\nexport const refreshTasks = tasks => {\n\treturn {\n\t\ttype: types.REFRESH_TASKS,\n\t\ttasks,\n\t};\n};\n\nexport const resetTasks = index => {\n\treturn {\n\t\ttype: types.RESET_TASKS,\n\t\tindex,\n\t};\n};\n\nexport const buildChart = () => {\n\treturn {\n\t\ttype: types.BUILD_CHART,\n\t};\n};\n\nexport const buildChartSuccess = chartColumns => {\n\treturn {\n\t\ttype: types.BUILD_CHART_SUCCESS,\n\t\tchartColumns,\n\t};\n};\n\nexport const buildChartReset = () => {\n\treturn {\n\t\ttype: types.BUILD_CHART_RESET,\n\t};\n};\n","import React from 'react';\nimport ReactTimer from 'react-compound-timer';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from 'components/Dialog';\nimport Button from './Button/Button';\nimport './Timer.scss';\n\nimport { getLS, setLS, currentTime } from 'utils/utils';\nimport { setTask } from 'store/actions';\nimport { connect } from 'react-redux';\n\nclass Timer extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\ttaskName: '',\n\t\t\tinitialTime: 0,\n\t\t\tisStartTimer: false,\n\t\t\tisOpenDialogNoName: false,\n\t\t};\n\t}\n\n\tasync componentWillMount() {\n\t\tconst isStartTimer = getLS('isStartTimer');\n\t\tconst timeSpend = getLS('timeSpend');\n\n\t\tconst initialTime = isStartTimer\n\t\t\t? currentTime() - getLS('timeStart') + timeSpend\n\t\t\t: timeSpend;\n\n\t\tawait this.setState({\n\t\t\tinitialTime,\n\t\t\tisStartTimer,\n\t\t});\n\t}\n\n\ttoggleStatusTimer = (start, stop, reset) => {\n\t\tif (this.state.isStartTimer) {\n\t\t\tif (this.state.taskName === '') {\n\t\t\t\tthis._toggleDialogTaskNoName(true);\n\t\t\t} else {\n\t\t\t\tstop();\n\t\t\t\tthis._addTaskLog(reset);\n\t\t\t}\n\t\t} else {\n\t\t\tstart();\n\t\t\tsetLS('isStartTimer', 1);\n\t\t\tsetLS('timeStart', currentTime());\n\t\t\tthis.setState({\n\t\t\t\tisStartTimer: true,\n\t\t\t});\n\t\t}\n\t};\n\n\thandleChangeTaskName = event => {\n\t\tthis.setState({\n\t\t\ttaskName: event.target.value,\n\t\t});\n\t};\n\n\t_addTaskLog = reset => {\n\t\tconst taskName = this.state.taskName;\n\t\tconst timeStart = getLS('timeStart');\n\t\tlet timeSpend = currentTime() - timeStart;\n\t\tlet timeEnd = timeStart + timeSpend;\n\n\t\tconst sec = 1000;\n\t\tif (timeSpend < sec && timeStart) {\n\t\t\ttimeSpend = sec;\n\t\t}\n\n\t\tthis.props.setTask({\n\t\t\ttaskName,\n\t\t\ttimeStart,\n\t\t\ttimeEnd,\n\t\t\ttimeSpend,\n\t\t});\n\n\t\tthis.setState({\n\t\t\ttaskName: '',\n\t\t\tinitialTime: 0,\n\t\t\tisStartTimer: false,\n\t\t\tisOpenDialogNoName: false,\n\t\t});\n\n\t\tsetLS('timeSpend', 0);\n\t\tsetLS('isStartTimer', 0);\n\n\t\treset();\n\t};\n\n\t_toggleDialogTaskNoName = status =>\n\t\tthis.setState({ isOpenDialogNoName: status });\n\t_getFormatValue = (value, text = ':') =>\n\t\t`${value < 10 ? `0${value}` : value}${text}`;\n\n\trender() {\n\t\tconst {\n\t\t\ttaskName,\n\t\t\tinitialTime,\n\t\t\tisStartTimer,\n\t\t\tisOpenDialogNoName,\n\t\t} = this.state;\n\n\t\treturn (\n\t\t\t<div className=\"timer__wrapper\">\n\t\t\t\t<Dialog\n\t\t\t\t\tisOpenDialog={isOpenDialogNoName}\n\t\t\t\t\tclickDialogOpen={() => this._toggleDialogTaskNoName(true)}\n\t\t\t\t\tclickDialogClose={() => this._toggleDialogTaskNoName(false)}\n\t\t\t\t\tclickDialogSuccess={() => this._toggleDialogTaskNoName(false)}\n\t\t\t\t\tdialogTitle=\"Empty task name\"\n\t\t\t\t\tdialogContentText=\"You are trying close your task without name, please enter the title and try gain!\"\n\t\t\t\t/>\n\n\t\t\t\t<ReactTimer\n\t\t\t\t\tinitialTime={initialTime}\n\t\t\t\t\tstartImmediately={isStartTimer}\n\t\t\t\t\tformatValue={value => this._getFormatValue(value)}\n\t\t\t\t>\n\t\t\t\t\t{({ start, stop, reset }) => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tvalue={taskName}\n\t\t\t\t\t\t\t\tonChange={this.handleChangeTaskName}\n\t\t\t\t\t\t\t\t// onKeyDown={event => this.handleChangeTaskName(event, reset)}\n\t\t\t\t\t\t\t\tplaceholder=\"Name of your task\"\n\t\t\t\t\t\t\t\tclassName=\"timer__input\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Paper className=\"timer\">\n\t\t\t\t\t\t\t\t<ReactTimer.Hours\n\t\t\t\t\t\t\t\t\tformatValue={value => this._getFormatValue(value)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ReactTimer.Minutes />\n\t\t\t\t\t\t\t\t<ReactTimer.Seconds\n\t\t\t\t\t\t\t\t\tformatValue={value => this._getFormatValue(value, '')}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tstart={start}\n\t\t\t\t\t\t\t\tstop={stop}\n\t\t\t\t\t\t\t\treset={reset}\n\t\t\t\t\t\t\t\tisStartTimer={isStartTimer}\n\t\t\t\t\t\t\t\ttoggleStatusTimer={this.toggleStatusTimer}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</ReactTimer>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = ({ tasks }) => {\n\treturn {\n\t\ttasks,\n\t};\n};\n\nconst mapDispatchToProps = {\n\tsetTask,\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(Timer);\n","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nexport default class TasksNotFound extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<TableRow>\n\t\t\t\t<TableCell align=\"center\" colSpan=\"7\">\n\t\t\t\t\tTasks Not Found\n\t\t\t\t</TableCell>\n\t\t\t</TableRow>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\n\nimport Dialog from 'components/Dialog';\n\nclass BtnInfo extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tisOpenDialogInfo: false,\n\t\t};\n\t}\n\n\t_toggleDialogInfo = status => this.setState({ isOpenDialogInfo: status });\n\n\trender() {\n\t\tconst { task, styleButton, getFormatTime } = this.props;\n\t\tconst { isOpenDialogInfo } = this.state;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tstyle={styleButton}\n\t\t\t\t\tonClick={() => this._toggleDialogInfo(true)}\n\t\t\t\t>\n\t\t\t\t\tInfo\n\t\t\t\t</Button>\n\t\t\t\t<Dialog\n\t\t\t\t\tisOpenDialog={isOpenDialogInfo}\n\t\t\t\t\tclickDialogClose={() => this._toggleDialogInfo(false)}\n\t\t\t\t\tclickDialogSuccess={() => this._toggleDialogInfo(false)}\n\t\t\t\t\tdialogTitle={`${task.taskName}`}\n\t\t\t\t>\n\t\t\t\t\t<Table>\n\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t<TableCell align=\"left\"> Time start: </TableCell>\n\t\t\t\t\t\t\t\t<TableCell align=\"left\">\n\t\t\t\t\t\t\t\t\t{getFormatTime(task.timeStart)}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t<TableCell align=\"left\"> Time end: </TableCell>\n\t\t\t\t\t\t\t\t<TableCell align=\"left\">\n\t\t\t\t\t\t\t\t\t{getFormatTime(task.timeEnd)}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t<TableCell align=\"left\"> Time spend: </TableCell>\n\t\t\t\t\t\t\t\t<TableCell align=\"left\">\n\t\t\t\t\t\t\t\t\t{getFormatTime(task.timeSpend, true)}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t</Table>\n\t\t\t\t</Dialog>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default BtnInfo;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport { removeTask } from 'store/actions';\nimport { connect } from 'react-redux';\n\nimport Dialog from 'components/Dialog';\n\nclass BtnRemove extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tisOpenDialogRemove: false,\n\t\t};\n\t}\n\n\t_toggleDialogRemove = status => this.setState({ isOpenDialogRemove: status });\n\n\trender() {\n\t\tconst { isOpenDialogRemove } = this.state;\n\t\tconst { styleButton, taskIndex, removeTask } = this.props;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tstyle={styleButton}\n\t\t\t\t\tonClick={() => this._toggleDialogRemove(true)}\n\t\t\t\t>\n\t\t\t\t\tDelete\n\t\t\t\t</Button>\n\n\t\t\t\t<Dialog\n\t\t\t\t\tisOpenDialog={isOpenDialogRemove}\n\t\t\t\t\tclickDialogClose={() => this._toggleDialogRemove(false)}\n\t\t\t\t\tclickDialogSuccess={() => {\n\t\t\t\t\t\tthis._toggleDialogRemove(false);\n\t\t\t\t\t\tremoveTask(taskIndex);\n\t\t\t\t\t}}\n\t\t\t\t\tbtnRejectText=\"No\"\n\t\t\t\t\tbtnSuccessText=\"Yes\"\n\t\t\t\t\tdialogTitle=\"You are sure?\"\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = {\n\tremoveTask,\n};\n\nexport default connect(\n\tnull,\n\tmapDispatchToProps\n)(BtnRemove);\n","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport BtnInfo from './BtnInfo';\nimport BtnRemove from './BtnRemove';\n\nconst styleButton = {\n\tbackground: 'white',\n\tborderRadius: 0,\n};\n\nconst format = 'HH:mm:ss';\n\nclass TasksRows extends React.Component {\n\tgetFormatTime = (value, isUTC) =>\n\t\tisUTC ? moment.utc(+value).format(format) : moment(+value).format(format);\n\n\t_getTimeEnd = task => {\n\t\treturn this.getFormatTime(task.timeStart) ===\n\t\t\tthis.getFormatTime(task.timeEnd)\n\t\t\t? this.getFormatTime(task.timeEnd + 1000)\n\t\t\t: this.getFormatTime(task.timeEnd);\n\t};\n\n\trender() {\n\t\tconst { tasks } = this.props;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{tasks.map((task, index) => (\n\t\t\t\t\t<TableRow key={`task-body-${index}`}>\n\t\t\t\t\t\t<TableCell component=\"th\" scope=\"row\">\n\t\t\t\t\t\t\t{++index}\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t<TableCell align=\"left\">{task.taskName}</TableCell>\n\t\t\t\t\t\t<TableCell align=\"center\">\n\t\t\t\t\t\t\t{this.getFormatTime(task.timeStart)}\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t<TableCell align=\"center\">{this._getTimeEnd(task)}</TableCell>\n\t\t\t\t\t\t<TableCell align=\"center\">\n\t\t\t\t\t\t\t{this.getFormatTime(task.timeSpend, true)}\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t<TableCell align=\"center\">\n\t\t\t\t\t\t\t<BtnInfo\n\t\t\t\t\t\t\t\ttask={task}\n\t\t\t\t\t\t\t\tstyleButton={styleButton}\n\t\t\t\t\t\t\t\tgetFormatTime={this.getFormatTime}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t<TableCell align=\"center\">\n\t\t\t\t\t\t\t<BtnRemove taskIndex={--index} styleButton={styleButton} />\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t))}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = ({ tasks }) => {\n\treturn {\n\t\ttasks,\n\t};\n};\n\nexport default connect(mapStateToProps)(TasksRows);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport { connect } from 'react-redux';\n\nimport TasksNotFound from './TasksNotFound';\nimport TasksRows from './TasksRows/TasksRows';\n\nconst useStyles = makeStyles(() => ({\n\troot: {\n\t\twidth: '100%',\n\t\toverflowX: 'auto',\n\t\tborderRadius: 0,\n\t},\n\ttable: {\n\t\tminWidth: 650,\n\t},\n}));\n\nconst tableHeads = [\n\t'№',\n\t'Tasks',\n\t'Time start',\n\t'Time end',\n\t'Time Spend',\n\t'Info',\n\t'Delete',\n];\n\nconst TableLog = ({ tasks }) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<>\n\t\t\t<Paper className={classes.root}>\n\t\t\t\t<Table className={classes.table}>\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t{tableHeads.map((tableHead, index) => (\n\t\t\t\t\t\t\t\t<TableCell key={`task-header-${index}`} align=\"center\">\n\t\t\t\t\t\t\t\t\t{tableHead}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{tasks.length ? <TasksRows /> : <TasksNotFound />}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</Paper>\n\t\t</>\n\t);\n};\n\nconst mapStateToProps = ({ tasks }) => {\n\treturn {\n\t\ttasks,\n\t};\n};\n\nexport default connect(mapStateToProps)(TableLog);\n","import React from 'react';\nimport Button from '@material-ui/core/Button/Button';\n\nimport { connect } from 'react-redux';\nimport { setTask, resetTasks, buildChart, refreshTasks } from 'store/actions';\nimport { generateNewTasks, setLS } from 'utils/utils';\n\nimport './BtnGenerate.scss';\n\nclass BtnGenerate extends React.Component {\n\t_generate = async () => {\n\t\tawait this.props.resetTasks();\n\t\tconst newTasks = await generateNewTasks();\n\t\tsetLS('tasks', newTasks, false);\n\t\tawait this.props.refreshTasks(newTasks);\n\t\tthis.props.buildChart();\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Button\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tclassName=\"btn btn__generate\"\n\t\t\t\tonClick={() => this._generate()}\n\t\t\t>\n\t\t\t\tGenerate\n\t\t\t</Button>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = {\n\tsetTask,\n\trefreshTasks,\n\tresetTasks,\n\tbuildChart,\n};\n\nexport default connect(\n\tnull,\n\tmapDispatchToProps\n)(BtnGenerate);\n","import React, { PureComponent } from 'react';\nimport {\n\tResponsiveContainer,\n\tBarChart,\n\tBar,\n\tCartesianGrid,\n\tXAxis,\n\tYAxis,\n} from 'recharts';\n\nimport { connect } from 'react-redux';\nimport { buildChart } from 'store/actions';\n\nimport BtnGenerate from './BtnGenerate';\n\nclass Chart extends PureComponent {\n\tcomponentDidMount() {\n\t\tthis.props.buildChart();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<ResponsiveContainer width=\"100%\" height={300}>\n\t\t\t\t\t<BarChart data={this.props.chartColumns}>\n\t\t\t\t\t\t<CartesianGrid stroke=\"#ccc\" />\n\t\t\t\t\t\t<XAxis dataKey=\"name\" />\n\t\t\t\t\t\t<YAxis domain={[0, 60]} />\n\t\t\t\t\t\t<Bar\n\t\t\t\t\t\t\ttype=\"monotone\"\n\t\t\t\t\t\t\tdataKey=\"uv\"\n\t\t\t\t\t\t\tbarSize={30}\n\t\t\t\t\t\t\tfill=\"#8884d8\"\n\t\t\t\t\t\t\tlabel={renderLabel}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</BarChart>\n\t\t\t\t</ResponsiveContainer>\n\n\t\t\t\t<BtnGenerate />\n\t\t\t</>\n\t\t);\n\t}\n}\n\nconst renderLabel = ({ payload, x, y, width, height, value }) => {\n\tif (value > 0) {\n\t\tlet dy = 16;\n\t\tlet fill = '#fff';\n\n\t\tif (value <= 5) {\n\t\t\tdy = -6;\n\t\t\tfill = '#000';\n\t\t}\n\n\t\treturn (\n\t\t\t<text x={x + width / 2} y={y} fill={fill} textAnchor=\"middle\" dy={dy}>\n\t\t\t\t{value}\n\t\t\t</text>\n\t\t);\n\t} else {\n\t\treturn null;\n\t}\n};\n\nconst mapStateToProps = ({ chartColumns }) => {\n\treturn {\n\t\tchartColumns,\n\t};\n};\n\nconst mapDispatchToProps = {\n\tbuildChart,\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(Chart);\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { Link, Route, Switch, withRouter } from 'react-router-dom';\n\nimport './Tabs.scss';\n\nimport TasksLog from './TableLog/TableLog';\nimport TasksChart from './Chart/Chart';\n\nclass NavTabs extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tvalue: 0,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.setState({\n\t\t\tvalue: this.props.location.pathname === '/tasks/chart' ? 1 : 0,\n\t\t});\n\t}\n\n\thandleChange = (event, newValue) => {\n\t\tthis.setState({\n\t\t\tvalue: newValue,\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { value } = this.state;\n\t\treturn (\n\t\t\t<div className=\"tabs__wrapper\">\n\t\t\t\t<AppBar position=\"static\">\n\t\t\t\t\t<Tabs variant=\"fullWidth\" value={value} onChange={this.handleChange}>\n\t\t\t\t\t\t<Tab label=\"Task Log\" component={Link} to=\"/tasks/log\" />\n\t\t\t\t\t\t<Tab label=\"Task Chart\" component={Link} to=\"/tasks/chart\" />\n\t\t\t\t\t</Tabs>\n\t\t\t\t</AppBar>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/tasks/log\" component={TasksLog} />\n\t\t\t\t\t<Route path=\"/tasks/chart\" component={TasksChart} />\n\t\t\t\t\t<Route component={TasksLog} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withRouter(NavTabs);\n","import { SET_TASK, REMOVE_TASK, RESET_TASKS, REFRESH_TASKS } from '../types';\nimport { getLS, setLS } from 'utils/utils';\n\nconst initState = getLS('tasks', false) || [];\n\nconst tasks = (state = initState, action) => {\n\tswitch (action.type) {\n\t\tcase SET_TASK:\n\t\t\tconst tasks = [...state, action.payload];\n\t\t\tsetLS('tasks', tasks, false);\n\t\t\treturn tasks;\n\n\t\tcase REMOVE_TASK:\n\t\t\tlet newTasks = [...state];\n\t\t\tnewTasks.splice(action.index, 1);\n\t\t\tsetLS('tasks', newTasks, false);\n\t\t\treturn newTasks;\n\n\t\tcase REFRESH_TASKS:\n\t\t\treturn action.tasks;\n\n\t\tcase RESET_TASKS:\n\t\t\treturn [];\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default tasks;\n","import { BUILD_CHART_SUCCESS, BUILD_CHART_RESET } from '../types';\nimport { getDefaultChartColumns } from 'utils/utils';\n\nconst initState = getDefaultChartColumns();\n\nconst chartColumns = (state = initState, action) => {\n\tswitch (action.type) {\n\t\tcase BUILD_CHART_SUCCESS:\n\t\t\treturn action.chartColumns;\n\n\t\tcase BUILD_CHART_RESET:\n\t\t\treturn getDefaultChartColumns();\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default chartColumns;\n","import { combineReducers } from 'redux';\nimport tasks from './tasks';\nimport chartColumns from './chartColumns';\n\nexport default combineReducers({\n\ttasks,\n\tchartColumns,\n});\n","import { put, call, select, takeEvery } from 'redux-saga/effects';\nimport { BUILD_CHART } from 'store/types';\nimport { buildChartReset, buildChartSuccess } from 'store/actions';\nimport { changeTaskFormat, setChartColumns } from 'utils/utils';\n\nfunction* buildChart() {\n\ttry {\n\t\tyield put(buildChartReset());\n\n\t\tconst { tasks, chartColumns } = yield select();\n\t\tconst newTasksFormat = yield call(() => changeTaskFormat(tasks));\n\t\tconst chartColumnsWithValue = yield call(() =>\n\t\t\tsetChartColumns(chartColumns, newTasksFormat)\n\t\t);\n\n\t\tyield put(buildChartSuccess(chartColumnsWithValue));\n\t} catch (error) {\n\t\tconsole.log('error: ', error);\n\t}\n}\n\nexport function* watchBuildChart() {\n\tyield takeEvery(BUILD_CHART, buildChart);\n}\n","import { all } from 'redux-saga/effects';\n\nimport { watchBuildChart } from './buildChart';\n\nexport default function* rootSaga() {\n\tyield all([watchBuildChart()]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n\trootReducer,\n\tcomposeWithDevTools(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport Container from '@material-ui/core/Container';\n\nimport Timer from 'containers/Timer/Timer';\nimport TaskInfo from 'containers/Tasks/Tabs';\nimport store from 'store';\n\nconst App = () => (\n\t<Provider store={store}>\n\t\t<Container>\n\t\t\t<BrowserRouter>\n\t\t\t\t<Timer />\n\t\t\t\t<TaskInfo />\n\t\t\t</BrowserRouter>\n\t\t</Container>\n\t</Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'scss/index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}