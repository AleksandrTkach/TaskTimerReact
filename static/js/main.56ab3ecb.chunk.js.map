{"version":3,"sources":["components/Dialog.js","containers/Timer/Button/Button.js","containers/Tasks/TableLog/TasksNotFound.js","containers/Tasks/TableLog/TasksRows/BtnInfo.js","store/types.js","store/actions/index.js","containers/Tasks/TableLog/TasksRows/BtnRemove.js","containers/Tasks/TableLog/TasksRows/TasksRows.js","containers/Tasks/TableLog/TableLog.js","containers/Tasks/BtnGenerate.js","containers/Tasks/Chart.js","containers/Tasks/Tabs.js","containers/Timer/Timer.js","store/reducers/tasks.js","store/reducers/localStorage.js","store/reducers/index.js","store/sagas/getLocalStorage.js","store/sagas/setLocalStorage.js","store/sagas/index.js","store/index.js","components/App.js","serviceWorker.js","index.js"],"names":["FormDialog","_this$props","this","props","_this$props$dialogTit","dialogTitle","dialogContentText","isOpenDialog","clickDialogClose","clickDialogSuccess","_this$props$btnSucces","btnSuccessText","_this$props$btnReject","btnRejectText","react_default","a","createElement","Dialog","open","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","children","DialogActions","Button","onClick","color","React","Component","TimerButton","_this","Button_default","variant","className","toggleStatusTimer","start","stop","reset","isStartTimer","TasksNotFound","TableRow","TableCell","align","colSpan","BtnInfo","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_toggleDialogInfo","status","setState","isOpenDialogInfo","state","_this2","task","styleButton","getFormatTime","Fragment","style","Dialog_FormDialog","concat","taskName","Table","TableBody","timeStart","timeEnd","timeSpend","GET_LOCAL_STORAGE","SET_LOCAL_STORAGE","setTask","payload","type","removeTask","index","getLocalStorageSuccess","value","getLocalStorageError","error","setLocalStorageSuccess","setLocalStorageError","BtnRemove","_toggleDialogRemove","isOpenDialogRemove","taskIndex","mapDispatchToProps","connect","background","borderRadius","format","TasksRows","isUTC","moment","utc","_getTimeEnd","tasks","map","key","component","scope","TasksRows_BtnInfo","TasksRows_BtnRemove","_ref","useStyles","makeStyles","root","width","overflowX","table","minWidth","tableHeads","_ref2","classes","Paper","TableHead","tableHead","length","TableLog_TasksRows_TasksRows","TasksNotFound_TasksNotFound","BtnGenerate","_generate","_callee","date","amountTasks","i","regenerator_default","wrap","_context","prev","next","resetTasks","Date","_getRandomNumber","Number","getFullYear","getMonth","getDate","getTime","_getNextTime","time","min","max","Math","round","random","Chart","_setNewFormatTasks","startHour","startMin","startSec","endHour","endMin","endSec","_setValuesChart","asyncToGenerator","mark","columns","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","push","name","uv","undefined","Symbol","iterator","done","_setValueColumn","t0","return","finish","diffHour","hour","currentDay","es6","height","data","slice","stroke","dataKey","domain","barSize","fill","label","renderCustomBarLabel","Tasks_BtnGenerate","PureComponent","x","y","textAnchor","dy","_ref3","LinkTab","Tab","assign","event","preventDefault","theme","flexGrow","backgroundColor","palette","paper","NavTabs","_React$useState","useState","_React$useState2","slicedToArray","setValue","AppBar","position","Tabs","onChange","newValue","href","Tasks_TableLog_TableLog","Tasks_Chart","Timer","currentTime","_getCurrentTime","_setItem","_getItem","_toggleDialogTaskNoName","_addTaskLog","handleChangeTaskName","arguments","target","initialTime","isOpenDialogNoName","localStorage","getItem","setItem","_getFormatValue","text","_this$state","clickDialogOpen","build","startImmediately","formatValue","TextField","onKeyDown","placeholder","Hours","Minutes","Seconds","Button_TimerButton","getLocalStorage","types","setLocalStorage","initState","JSON","parse","action","toConsumableArray","stringify","newTasks","splice","initialState","timePassed","timeStop","defineProperty","combineReducers","watchGetLocalStorage","Promise","resolve","then","sent","put","_marked","_context2","takeEvery","_marked2","watchSetLocalStorage","setLocalStorage_marked","setLocalStorage_marked2","rootSaga","all","sagas_marked","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","run","App","es","Container","containers_Timer_Timer","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.56ab3ecb.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default class FormDialog extends React.Component {\n\trender() {\n\t\tconst {\n\t\t\tdialogTitle = '',\n\t\t\tdialogContentText,\n\t\t\tisOpenDialog,\n\t\t\tclickDialogClose,\n\t\t\tclickDialogSuccess,\n\t\t\tbtnSuccessText = 'Close',\n\t\t\tbtnRejectText = null,\n\t\t} = this.props;\n\n\t\treturn (\n\t\t\t<Dialog\n\t\t\t\topen={isOpenDialog}\n\t\t\t\tonClose={clickDialogClose}\n\t\t\t\taria-labelledby=\"form-dialog-title\"\n\t\t\t>\n\t\t\t\t<DialogTitle id=\"form-dialog-title\">{dialogTitle}</DialogTitle>\n\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<DialogContentText>{dialogContentText}</DialogContentText>\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</DialogContent>\n\n\t\t\t\t<DialogActions>\n\t\t\t\t\t{btnRejectText !== null ? (\n\t\t\t\t\t\t<Button onClick={clickDialogClose} color=\"primary\">\n\t\t\t\t\t\t\t{btnRejectText}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t) : null}\n\t\t\t\t\t<Button onClick={clickDialogSuccess} color=\"primary\">\n\t\t\t\t\t\t{btnSuccessText}\n\t\t\t\t\t</Button>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './Button.scss';\n\nexport default class TimerButton extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<Button\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tclassName={'btn'}\n\t\t\t\tonClick={() =>\n\t\t\t\t\tthis.props.toggleStatusTimer(\n\t\t\t\t\t\tthis.props.start,\n\t\t\t\t\t\tthis.props.stop,\n\t\t\t\t\t\tthis.props.reset\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{!this.props.isStartTimer ? 'Start' : 'Stop'}\n\t\t\t</Button>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nexport default class TasksNotFound extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<TableRow>\n\t\t\t\t<TableCell align=\"center\" colSpan=\"7\">\n\t\t\t\t\tTasks Not Found\n\t\t\t\t</TableCell>\n\t\t\t</TableRow>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\n\nimport Dialog from 'components/Dialog';\n\nclass BtnInfo extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tisOpenDialogInfo: false,\n\t\t};\n\t}\n\n\t_toggleDialogInfo = status => this.setState({ isOpenDialogInfo: status });\n\n\trender() {\n\t\tconst { task, styleButton, getFormatTime } = this.props;\n\t\tconst { isOpenDialogInfo } = this.state;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tstyle={styleButton}\n\t\t\t\t\tonClick={() => this._toggleDialogInfo(true)}\n\t\t\t\t>\n\t\t\t\t\tInfo\n\t\t\t\t</Button>\n\t\t\t\t<Dialog\n\t\t\t\t\tisOpenDialog={isOpenDialogInfo}\n\t\t\t\t\tclickDialogClose={() => this._toggleDialogInfo(false)}\n\t\t\t\t\tclickDialogSuccess={() => this._toggleDialogInfo(false)}\n\t\t\t\t\tdialogTitle={`${task.taskName}`}\n\t\t\t\t>\n\t\t\t\t\t<Table>\n\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t<TableCell align=\"left\"> Time start: </TableCell>\n\t\t\t\t\t\t\t\t<TableCell align=\"left\">\n\t\t\t\t\t\t\t\t\t{getFormatTime(task.timeStart)}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t<TableCell align=\"left\"> Time end: </TableCell>\n\t\t\t\t\t\t\t\t<TableCell align=\"left\">\n\t\t\t\t\t\t\t\t\t{getFormatTime(task.timeEnd)}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t<TableCell align=\"left\"> Time spend: </TableCell>\n\t\t\t\t\t\t\t\t<TableCell align=\"left\">\n\t\t\t\t\t\t\t\t\t{getFormatTime(task.timeSpend, true)}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t</Table>\n\t\t\t\t</Dialog>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default BtnInfo;\n","export const SET_TASK = 'SET_TASK';\nexport const REMOVE_TASK = 'REMOVE_TASK';\nexport const RESET_TASKS = 'RESET_TASKS';\n\nexport const GET_LOCAL_STORAGE = 'GET_LOCAL_STORAGE';\nexport const GET_LOCAL_STORAGE_SUCCESS = 'GET_LOCAL_STORAGE_SUCCESS';\nexport const GET_LOCAL_STORAGE_ERROR = 'GET_LOCAL_STORAGE_ERROR';\n\nexport const SET_LOCAL_STORAGE = 'SET_LOCAL_STORAGE';\nexport const SET_LOCAL_STORAGE_SUCCESS = 'SET_LOCAL_STORAGE_SUCCESS';\nexport const SET_LOCAL_STORAGE_ERROR = 'SET_LOCAL_STORAGE_ERROR';\n","import * as types from 'store/types';\n\nexport const setTask = payload => {\n\treturn {\n\t\ttype: types.SET_TASK,\n\t\tpayload,\n\t};\n};\n\nexport const removeTask = index => {\n\treturn {\n\t\ttype: types.REMOVE_TASK,\n\t\tindex,\n\t};\n};\n\nexport const resetTasks = index => {\n\treturn {\n\t\ttype: types.RESET_TASKS,\n\t\tindex,\n\t};\n};\n\nexport const getLocalStorage = key => {\n\treturn {\n\t\ttype: types.GET_LOCAL_STORAGE,\n\t\tkey,\n\t};\n};\n\nexport const getLocalStorageSuccess = value => {\n\treturn {\n\t\ttype: types.GET_LOCAL_STORAGE_SUCCESS,\n\t\tvalue,\n\t};\n};\n\nexport const getLocalStorageError = error => {\n\treturn {\n\t\ttype: types.GET_LOCAL_STORAGE_ERROR,\n\t\terror,\n\t};\n};\n\nexport const setLocalStorage = (key, value) => {\n\treturn {\n\t\ttype: types.SET_LOCAL_STORAGE,\n\t\tkey,\n\t\tvalue,\n\t};\n};\n\nexport const setLocalStorageSuccess = value => {\n\treturn {\n\t\ttype: types.SET_LOCAL_STORAGE_SUCCESS,\n\t\tvalue,\n\t};\n};\n\nexport const setLocalStorageError = error => {\n\treturn {\n\t\ttype: types.SET_LOCAL_STORAGE_ERROR,\n\t\terror,\n\t};\n};\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport { removeTask } from 'store/actions';\nimport { connect } from 'react-redux';\n\nimport Dialog from 'components/Dialog';\n\nclass BtnRemove extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tisOpenDialogRemove: false,\n\t\t};\n\t}\n\n\t_toggleDialogRemove = status => this.setState({ isOpenDialogRemove: status });\n\n\trender() {\n\t\tconst { isOpenDialogRemove } = this.state;\n\t\tconst { styleButton, taskIndex, removeTask } = this.props;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tstyle={styleButton}\n\t\t\t\t\tonClick={() => this._toggleDialogRemove(true)}\n\t\t\t\t>\n\t\t\t\t\tDelete\n\t\t\t\t</Button>\n\n\t\t\t\t<Dialog\n\t\t\t\t\tisOpenDialog={isOpenDialogRemove}\n\t\t\t\t\tclickDialogClose={() => this._toggleDialogRemove(false)}\n\t\t\t\t\tclickDialogSuccess={() => {\n\t\t\t\t\t\tthis._toggleDialogRemove(false);\n\t\t\t\t\t\tremoveTask(taskIndex);\n\t\t\t\t\t}}\n\t\t\t\t\tbtnRejectText=\"No\"\n\t\t\t\t\tbtnSuccessText=\"Yes\"\n\t\t\t\t\tdialogTitle=\"You are sure?\"\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = {\n\tremoveTask,\n};\n\nexport default connect(\n\tnull,\n\tmapDispatchToProps\n)(BtnRemove);\n","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport BtnInfo from './BtnInfo';\nimport BtnRemove from './BtnRemove';\n\nconst styleButton = {\n\tbackground: 'white',\n\tborderRadius: 0,\n};\n\nconst format = 'HH:mm:ss';\n\nclass TasksRows extends React.Component {\n\n\tgetFormatTime = (value, isUTC) => isUTC\n\t\t? moment.utc(+value).format(format)\n\t\t: moment(+value).format(format);\n\n\t_getTimeEnd = task => {\n\t\treturn this.getFormatTime(task.timeStart) ===\n\t\t\tthis.getFormatTime(task.timeEnd)\n\t\t\t? this.getFormatTime(task.timeEnd + 1000)\n\t\t\t: this.getFormatTime(task.timeEnd);\n\t};\n\n\trender() {\n\t\tconst { tasks } = this.props;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{tasks.map((task, index) => (\n\t\t\t\t\t<TableRow key={`task-body-${index}`}>\n\t\t\t\t\t\t<TableCell component=\"th\" scope=\"row\">\n\t\t\t\t\t\t\t{++index}\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t<TableCell align=\"left\">{task.taskName}</TableCell>\n\t\t\t\t\t\t<TableCell align=\"center\">\n\t\t\t\t\t\t\t{this.getFormatTime(task.timeStart)}\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t<TableCell align=\"center\">{this._getTimeEnd(task)}</TableCell>\n\t\t\t\t\t\t<TableCell align=\"center\">\n\t\t\t\t\t\t\t{this.getFormatTime(task.timeSpend, true)}\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t<TableCell align=\"center\">\n\t\t\t\t\t\t\t<BtnInfo\n\t\t\t\t\t\t\t\ttask={task}\n\t\t\t\t\t\t\t\tstyleButton={styleButton}\n\t\t\t\t\t\t\t\tgetFormatTime={this.getFormatTime}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t<TableCell align=\"center\">\n\t\t\t\t\t\t\t<BtnRemove taskIndex={--index} styleButton={styleButton} />\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t))}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = ({ tasks }) => {\n\treturn {\n\t\ttasks,\n\t};\n};\n\nexport default connect(mapStateToProps)(TasksRows);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport { connect } from 'react-redux';\n\nimport TasksNotFound from './TasksNotFound';\nimport TasksRows from './TasksRows/TasksRows';\n\nconst useStyles = makeStyles(() => ({\n\troot: {\n\t\twidth: '100%',\n\t\toverflowX: 'auto',\n\t\tborderRadius: 0,\n\t},\n\ttable: {\n\t\tminWidth: 650,\n\t},\n}));\n\nconst tableHeads = [\n\t'№',\n\t'Tasks',\n\t'Time start',\n\t'Time end',\n\t'Time Spend',\n\t'Info',\n\t'Delete',\n];\n\nconst TableLog = ({ tasks }) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<>\n\t\t\t<Paper className={classes.root}>\n\t\t\t\t<Table className={classes.table}>\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t{tableHeads.map((tableHead, index) => (\n\t\t\t\t\t\t\t\t<TableCell key={`task-header-${index}`} align=\"center\">\n\t\t\t\t\t\t\t\t\t{tableHead}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{tasks.length ? <TasksRows /> : <TasksNotFound />}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</Paper>\n\t\t</>\n\t);\n};\n\nconst mapStateToProps = ({ tasks }) => {\n\treturn {\n\t\ttasks,\n\t};\n};\n\nexport default connect(mapStateToProps)(TableLog);\n","import React from 'react';\nimport Button from '@material-ui/core/Button/Button';\n\nimport { connect } from 'react-redux';\nimport { setTask, removeTask, resetTasks } from 'store/actions';\n\nclass BtnGenerate extends React.Component {\n\t_generate = async () => {\n\t\tawait this.props.resetTasks();\n\n\t\tconst date = new Date();\n\t\tconst amountTasks = this._getRandomNumber(10, 15);\n\t\tlet timeStart = Number(\n\t\t\tnew Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime()\n\t\t);\n\n\t\tfor (let i = 0; i < amountTasks; i++) {\n\t\t\tconst timeEnd = this._getNextTime(timeStart);\n\n\t\t\tawait this.props.setTask({\n\t\t\t\ttaskName: `Task ${i}`,\n\t\t\t\ttimeStart,\n\t\t\t\ttimeEnd,\n\t\t\t\ttimeSpend: timeEnd - timeStart,\n\t\t\t});\n\n\t\t\ttimeStart = this._getNextTime(timeEnd);\n\t\t}\n\t};\n\n\t_getNextTime = time => time + this._getRandomNumber(10, 90) * (1000 * 60);\n\t_getRandomNumber = (min, max) =>\n\t\tMath.round(Math.random() * (max - min) + min);\n\n\trender() {\n\t\treturn (\n\t\t\t<Button\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tclassName={'btn'}\n\t\t\t\tonClick={() => this._generate()}\n\t\t\t>\n\t\t\t\tGenerate\n\t\t\t</Button>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = ({ tasks }) => {\n\treturn {\n\t\ttasks,\n\t};\n};\n\nconst mapDispatchToProps = {\n\tsetTask,\n\tremoveTask,\n\tresetTasks,\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(BtnGenerate);\n","import React, { PureComponent } from 'react';\nimport {\n\tResponsiveContainer,\n\tBarChart,\n\tBar,\n\tCartesianGrid,\n\tXAxis,\n\tYAxis,\n} from 'recharts';\n\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport BtnGenerate from './BtnGenerate';\n\nclass Chart extends PureComponent {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tcolumns: [],\n\t\t\ttasks: [],\n\t\t\tcurrentDay: moment().format('DD-MM-YYYY'),\n\t\t};\n\t}\n\n\tasync componentDidMount() {\n\t\tawait this._setNewFormatTasks();\n\t\tawait this._setValuesChart();\n\t}\n\n\t_setNewFormatTasks = () => {\n\t\tconst tasks = this.props.tasks.map(task => {\n\t\t\treturn {\n\t\t\t\tstartHour: Number(moment(task.timeStart).format('H')),\n\t\t\t\tstartMin: Number(moment(task.timeStart).format('m')),\n\t\t\t\tstartSec: Number(moment(task.timeStart).format('ss')),\n\n\t\t\t\tendHour: Number(moment(task.timeEnd).format('H')),\n\t\t\t\tendMin: Number(moment(task.timeEnd).format('m')),\n\t\t\t\tendSec: Number(moment(task.timeEnd).format('ss')),\n\t\t\t};\n\t\t});\n\n\t\tthis.setState({ tasks });\n\t};\n\n\t_setValuesChart = async () => {\n\t\tconst columns = [];\n\t\tfor (let i = 0; i < 24; i++) {\n\t\t\tcolumns.push({\n\t\t\t\tname: i,\n\t\t\t\tuv: 0,\n\t\t\t});\n\t\t}\n\n\t\tfor (const task of this.state.tasks) {\n\t\t\tthis._setValueColumn(task, [...columns]);\n\t\t}\n\t};\n\n\t_setValueColumn = (task, columns) => {\n\t\tconst diffHour = task.endHour - task.startHour;\n\n\t\tif (diffHour > 0) {\n\t\t\tfor (let hour = task.startHour; hour < task.endHour; hour++) {\n\t\t\t\tif (task.startHour === hour) {\n\t\t\t\t\tcolumns[hour].uv += 60 - task.startMin;\n\t\t\t\t} else {\n\t\t\t\t\tcolumns[hour].uv += 60;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcolumns[task.endHour].uv += task.endMin;\n\t\t} else if (diffHour === 0) {\n\t\t\tcolumns[task.endHour].uv += task.endMin - task.startMin;\n\t\t}\n\n\t\tthis.setState({ columns });\n\t};\n\n\trender() {\n\t\tconst { columns } = this.state;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<ResponsiveContainer width=\"100%\" height={300}>\n\t\t\t\t\t<BarChart data={columns.slice()}>\n\t\t\t\t\t\t<CartesianGrid stroke=\"#ccc\" />\n\t\t\t\t\t\t<XAxis dataKey=\"name\" />\n\t\t\t\t\t\t<YAxis domain={[0, 60]} />\n\n\t\t\t\t\t\t<Bar\n\t\t\t\t\t\t\ttype=\"monotone\"\n\t\t\t\t\t\t\tdataKey=\"uv\"\n\t\t\t\t\t\t\tbarSize={30}\n\t\t\t\t\t\t\tfill=\"#8884d8\"\n\t\t\t\t\t\t\tlabel={renderCustomBarLabel}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</BarChart>\n\t\t\t\t</ResponsiveContainer>\n\n\t\t\t\t<BtnGenerate />\n\t\t\t</>\n\t\t);\n\t}\n}\n\nconst renderCustomBarLabel = ({ payload, x, y, width, height, value }) => {\n\treturn value > 0 ? (\n\t\t<text x={x + width / 2} y={y} fill=\"#666\" textAnchor=\"middle\" dy={-6}>\n\t\t\t{value}\n\t\t</text>\n\t) : null;\n};\n\nconst mapStateToProps = ({ tasks }) => {\n\treturn {\n\t\ttasks,\n\t};\n};\n\nexport default connect(mapStateToProps)(Chart);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\n\nimport TasksLog from './TableLog/TableLog';\nimport TasksChart from './Chart';\n\nfunction TabContainer(props) {\n\treturn (\n\t\t<Typography component=\"div\" style={{ padding: 8 * 3 }}>\n\t\t\t{props.children}\n\t\t</Typography>\n\t);\n}\n\nTabContainer.propTypes = {\n\tchildren: PropTypes.node.isRequired,\n};\n\nfunction LinkTab(props) {\n\treturn (\n\t\t<Tab\n\t\t\tcomponent=\"a\"\n\t\t\tonClick={event => {\n\t\t\t\tevent.preventDefault();\n\t\t\t}}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tflexGrow: 1,\n\t\tbackgroundColor: theme.palette.background.paper,\n\t},\n}));\n\nexport default function NavTabs() {\n\tconst classes = useStyles();\n\tconst [value, setValue] = React.useState(0);\n\n\tfunction handleChange(event, newValue) {\n\t\tsetValue(newValue);\n\t}\n\n\treturn (\n\t\t<div className={`${classes.root} w-100`}>\n\t\t\t<AppBar position=\"static\">\n\t\t\t\t<Tabs variant=\"fullWidth\" value={value} onChange={handleChange}>\n\t\t\t\t\t<LinkTab label=\"Tasks Log\" href=\"/tasks/log\" />\n\t\t\t\t\t<LinkTab label=\"Tasks Chart\" href=\"/tasks/chart\" />\n\t\t\t\t</Tabs>\n\t\t\t</AppBar>\n\t\t\t{value === 0 && <TasksLog />}\n\t\t\t{value === 1 && <TasksChart />}\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport ReactTimer from 'react-compound-timer';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from 'components/Dialog';\nimport Button from './Button/Button';\nimport TaskInfo from '../Tasks/Tabs';\nimport './Timer.scss';\n\nimport { setTask, getLocalStorage, setLocalStorage } from 'store/actions';\nimport { connect } from 'react-redux';\n\nclass Timer extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\ttaskName: '',\n\t\t\tinitialTime: 0,\n\t\t\tisStartTimer: false,\n\t\t\tisOpenDialogNoName: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\t// this.props.setLocalStorage('isStartTimer', 1);\n\t\t// this.props.getLocalStorage('isStartTimer');\n\n\t\tconst isStartTimer = this._getItem('isStartTimer');\n\t\tconst timeSpend = this._getItem('timeSpend');\n\n\t\tif (!isStartTimer) {\n\t\t\tthis.setState({\n\t\t\t\tinitialTime: timeSpend,\n\t\t\t\tisStartTimer,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tinitialTime:\n\t\t\t\t\tthis._getCurrentTime() - this._getItem('timeStart') + timeSpend,\n\t\t\t\tisStartTimer,\n\t\t\t});\n\t\t}\n\t}\n\n\ttoggleStatusTimer = (start, stop, reset) => {\n\t\tthis.setState({\n\t\t\tisStartTimer: !this.state.isStartTimer,\n\t\t});\n\n\t\tconst currentTime = this._getCurrentTime();\n\n\t\tif (this.state.isStartTimer) {\n\t\t\tstop();\n\t\t\tthis._setItem('isStartTimer', 0);\n\t\t\tthis._setItem(\n\t\t\t\t'timeSpend',\n\t\t\t\tthis._getItem('timeSpend') + (currentTime - this._getItem('timeStart'))\n\t\t\t);\n\t\t\tthis._setItem(\n\t\t\t\t'timeStop',\n\t\t\t\tthis._getItem('timeStart') + this._getItem('timeSpend')\n\t\t\t);\n\t\t\tthis.state.taskName === ''\n\t\t\t\t? this._toggleDialogTaskNoName(true)\n\t\t\t\t: this._addTaskLog(reset);\n\t\t} else {\n\t\t\tstart();\n\t\t\tthis._setItem('isStartTimer', 1);\n\t\t\tthis._setItem('timeStart', currentTime);\n\t\t}\n\t};\n\n\thandleChangeTaskName = (event, reset = () => {}) => {\n\t\tif (event.key === 'Enter' && event.target.value !== '') {\n\t\t\tthis._addTaskLog(reset);\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\ttaskName: event.target.value,\n\t\t\t});\n\t\t}\n\t};\n\n\t_addTaskLog = reset => {\n\t\tconst taskName = this.state.taskName;\n\t\tconst timeStart = this._getItem('timeStart');\n\t\tlet timeEnd = this._getItem('timeStop');\n\t\tlet timeSpend = this._getItem('timeSpend');\n\n\t\tconst sec = 1000;\n\t\tif (timeSpend < sec && timeStart) {\n\t\t\ttimeSpend = sec;\n\t\t}\n\n\t\tthis.props.setTask({\n\t\t\ttaskName,\n\t\t\ttimeStart,\n\t\t\ttimeEnd,\n\t\t\ttimeSpend,\n\t\t});\n\n\t\tthis.setState({\n\t\t\ttaskName: '',\n\t\t\tinitialTime: 0,\n\t\t\tisStartTimer: false,\n\t\t\tisOpenDialogNoName: false,\n\t\t});\n\n\t\tthis._setItem('timeSpend', 0);\n\n\t\treset();\n\t};\n\n\t_toggleDialogTaskNoName = status =>\n\t\tthis.setState({ isOpenDialogNoName: status });\n\t_getItem = name => Number(localStorage.getItem(name));\n\t_setItem = (name, value) => localStorage.setItem(name, value);\n\n\t_getCurrentTime = () => new Date().getTime();\n\t_getFormatValue = (value, text = ':') =>\n\t\t`${value < 10 ? `0${value}` : value}${text}`;\n\n\trender() {\n\t\tconst {\n\t\t\ttaskName,\n\t\t\tinitialTime,\n\t\t\tisStartTimer,\n\t\t\tisOpenDialogNoName,\n\t\t} = this.state;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"timer__wrapper\">\n\t\t\t\t\t<Dialog\n\t\t\t\t\t\tisOpenDialog={isOpenDialogNoName}\n\t\t\t\t\t\tclickDialogOpen={() => this._toggleDialogTaskNoName(true)}\n\t\t\t\t\t\tclickDialogClose={() => this._toggleDialogTaskNoName(false)}\n\t\t\t\t\t\tclickDialogSuccess={() => this._toggleDialogTaskNoName(false)}\n\t\t\t\t\t\tdialogTitle=\"Empty task name\"\n\t\t\t\t\t\tdialogContentText=\"You are trying close your task without name, please enter the title and try gain!\"\n\t\t\t\t\t/>\n\n\t\t\t\t\t<ReactTimer\n\t\t\t\t\t\tinitialTime={initialTime}\n\t\t\t\t\t\tstartImmediately={isStartTimer}\n\t\t\t\t\t\tformatValue={value => this._getFormatValue(value)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{({ start, stop, reset }) => (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tvalue={taskName}\n\t\t\t\t\t\t\t\t\tonChange={this.handleChangeTaskName}\n\t\t\t\t\t\t\t\t\tonKeyDown={event => this.handleChangeTaskName(event, reset)}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Name of your task\"\n\t\t\t\t\t\t\t\t\tclassName=\"timer__input\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Paper className=\"timer\">\n\t\t\t\t\t\t\t\t\t<ReactTimer.Hours\n\t\t\t\t\t\t\t\t\t\tformatValue={value => this._getFormatValue(value)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<ReactTimer.Minutes />\n\t\t\t\t\t\t\t\t\t<ReactTimer.Seconds\n\t\t\t\t\t\t\t\t\t\tformatValue={value => this._getFormatValue(value, '')}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tstart={start}\n\t\t\t\t\t\t\t\t\tstop={stop}\n\t\t\t\t\t\t\t\t\treset={reset}\n\t\t\t\t\t\t\t\t\tisStartTimer={isStartTimer}\n\t\t\t\t\t\t\t\t\ttoggleStatusTimer={this.toggleStatusTimer}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</ReactTimer>\n\t\t\t\t</div>\n\n\t\t\t\t<TaskInfo />\n\t\t\t</>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = ({ tasks, localStorage }) => {\n\treturn {\n\t\ttasks,\n\t\tlocalStorage,\n\t};\n};\n\nconst mapDispatchToProps = {\n\tsetTask,\n\tgetLocalStorage,\n\tsetLocalStorage,\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(Timer);\n","import { SET_TASK, REMOVE_TASK, RESET_TASKS } from '../types';\n\nconst initState = JSON.parse(localStorage.getItem('tasks')) || [];\n\nconst tasks = (state = initState, action) => {\n\tswitch (action.type) {\n\t\tcase SET_TASK:\n\t\t\tconst tasks = [...state, action.payload];\n\t\t\tlocalStorage.setItem('tasks', JSON.stringify(tasks));\n\t\t\treturn tasks;\n\n\t\tcase REMOVE_TASK:\n\t\t\tlet newTasks = [...state];\n\t\t\tnewTasks.splice(action.index, 1);\n\t\t\tlocalStorage.setItem('tasks', JSON.stringify(newTasks));\n\t\t\treturn newTasks;\n\n\t\tcase RESET_TASKS:\n\t\t\treturn [];\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default tasks;\n","import * as types from 'store/types';\n\nconst initialState = {\n\tisStartTimer: 0,\n\ttimePassed: 0,\n\ttimeStop: null,\n\ttimeStart: null,\n};\n\nconst localStorage = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase types.GET_LOCAL_STORAGE_SUCCESS:\n\t\t\treturn {\n\t\t\t\t[action.value.key]: action.value.value,\n\t\t\t};\n\n\t\tcase types.GET_LOCAL_STORAGE_ERROR:\n\t\t\treturn {\n\t\t\t\tvalue: null,\n\t\t\t};\n\n\t\tcase types.SET_LOCAL_STORAGE_SUCCESS:\n\t\t\treturn {\n\t\t\t\t[action.value.key]: action.value.value,\n\t\t\t};\n\n\t\tcase types.SET_LOCAL_STORAGE_ERROR:\n\t\t\treturn {\n\t\t\t\t[action.key]: 'error',\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default localStorage;\n","import { combineReducers } from 'redux';\nimport tasks from './tasks';\nimport localStorage from './localStorage';\n\nexport default combineReducers({\n\ttasks,\n\tlocalStorage,\n});\n","import { put, call, takeEvery } from 'redux-saga/effects';\nimport { GET_LOCAL_STORAGE } from 'store/types';\nimport { getLocalStorageSuccess, getLocalStorageError } from 'store/actions';\n\nfunction* getLocalStorage({ key }) {\n\ttry {\n\t\tconst value = yield call(() =>\n\t\t\tPromise.resolve().then(() => localStorage.getItem(key))\n\t\t);\n\t\tyield put(getLocalStorageSuccess({ key, value }));\n\t} catch (error) {\n\t\tyield put(getLocalStorageError(error));\n\t}\n}\n\nexport function* watchGetLocalStorage() {\n\tyield takeEvery(GET_LOCAL_STORAGE, getLocalStorage);\n}\n","import { put, call, takeEvery } from 'redux-saga/effects';\nimport { SET_LOCAL_STORAGE } from 'store/types';\nimport { setLocalStorageSuccess, setLocalStorageError } from 'store/actions';\n\nfunction* setLocalStorage({ key, value }) {\n\ttry {\n\t\tyield call(() =>\n\t\t\tPromise.resolve().then(() => localStorage.setItem(key, value))\n\t\t);\n\t\tyield put(setLocalStorageSuccess({ key, value }));\n\t} catch (error) {\n\t\tyield put(setLocalStorageError(error));\n\t}\n}\n\nexport function* watchSetLocalStorage() {\n\tyield takeEvery(SET_LOCAL_STORAGE, setLocalStorage);\n}\n","import { all } from 'redux-saga/effects';\n\nimport { watchGetLocalStorage } from './getLocalStorage';\nimport { watchSetLocalStorage } from './setLocalStorage';\n\nexport default function* rootSaga() {\n\tyield all([watchGetLocalStorage(), watchSetLocalStorage()]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n\trootReducer,\n\tcomposeWithDevTools(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport Container from '@material-ui/core/Container';\n\nimport Timer from 'containers/Timer/Timer';\nimport store from 'store';\n\nconst App = () => (\n\t<Provider store={store}>\n\t\t<Container>\n\t\t\t<Timer />\n\t\t</Container>\n\t</Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'scss/index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}