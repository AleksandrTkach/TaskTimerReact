{"version":3,"sources":["containers/NotFound.js","utils/constants.js","utils/utils.js","components/TaskInfo.js","store/modules/tasks.js","components/Dialog.js","containers/Timer/Clock.js","containers/Timer/Timer.js","containers/Tasks/TableLog/TasksNotFound.js","containers/Tasks/TableLog/TasksRows/BtnInfo.js","containers/Tasks/TableLog/TasksRows/BtnRemove.js","containers/Tasks/TableLog/TasksRows/TasksRows.js","containers/Tasks/TableLog/TableLog.js","store/modules/chart.js","containers/Tasks/Chart/BtnGenerate/BtnGenerate.js","containers/Tasks/Chart/Chart.js","containers/Tasks/Tabs/Tabs.js","store/rootReducers.js","store/sagas/buildChart.js","store/sagas/tasks.js","store/sagas/index.js","store/index.js","components/App.js","serviceWorker.js","index.js"],"names":["NotFound","react_default","a","createElement","className","AMOUNT_TASKS","TASK_DURATION","MIN","MAX","FOTMAT","ROUTER","getLS","key","arguments","length","undefined","Number","localStorage","getItem","JSON","parse","setLS","value","setItem","stringify","currentTime","Date","getTime","getFormatTime","isUTC","moment","utc","format","generateNewTasks","date","amountTasks","_getRandomNumber","timeStart","getFullYear","getMonth","getDate","newTasks","i","timeEnd","_getNextTime","push","taskName","concat","timeSpend","time","min","max","Math","round","random","changeTaskFormat","tasks","map","task","startHour","startMin","startSec","endHour","endMin","endSec","setChartColumns","chartColumns","newTasksFormat","columns","Object","toConsumableArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","diffHour","hour","uv","err","return","getDefaultChartColumns","name","action","type","payload","connect","_ref","withRouter","props","match","params","id","Fragment","Card","CardHeader","title","CardContent","Table_default","TableBody_default","TableRow_default","TableCell_default","align","CardActions","style","justifyContent","react_router_dom","to","Button","size","src_containers_NotFound","SET_TASK","REMOVE_TASK","setTask","initState","FormDialog","_this$props","this","_this$props$dialogTit","dialogTitle","dialogContentText","isOpenDialog","clickDialogClose","_this$props$clickDial","clickDialogSuccess","_this$props$btnSucces","btnSuccessText","_this$props$btnReject","btnRejectText","Dialog","fullWidth","maxWidth","open","onClose","aria-labelledby","DialogTitle","textAlign","DialogContent","DialogContentText","children","DialogActions","onClick","color","React","Component","INITIAL_TIME","Clock","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start","interval","setInterval","_tick","stop","clearInterval","setState","load","state","Timer","toggleStatusTimer","isStartTimer","_toggleDialogTaskNoName","_addTaskLog","startTimer","initialTime","clock","current","stopTimer","handleChangeTaskName","event","target","isOpenDialogNoName","status","createRef","_this2","_this$state","components_Dialog","clickDialogOpen","TextField","onChange","placeholder","Paper","Timer_Clock","ref","Button_default","variant","mapDispatchToProps","TasksNotFound","TableRow_TableRow","TableCell_TableCell","colSpan","BtnInfo","styleButton","index","BtnRemove","_toggleDialogRemove","isOpenDialogRemove","taskIndex","removeTask","background","borderRadius","TasksRows","_getTimeEnd","component","scope","TasksRows_BtnInfo","TasksRows_BtnRemove","useStyles","makeStyles","root","width","overflowX","table","minWidth","tableHeads","_ref2","classes","Table_Table","TableHead","tableHead","TableBody_TableBody","TableLog_TasksRows_TasksRows","TableLog_TasksNotFound","BUILD_CHART","buildChart","buildChartReset","buildChartSuccess","refreshTasks","resetTasks","_generate","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","sent","apply","Chart","es6","height","data","stroke","dataKey","domain","barSize","fill","label","renderLabel","Chart_BtnGenerate_BtnGenerate","PureComponent","x","y","dy","textAnchor","NavTabs","handleChange","activeTabIndex","location","pathname","AppBar","position","Tabs","Tab","Link","react_router","exact","path","TasksLog","TasksChart","combineReducers","slice","watchBuildChart","chartColumnsWithValue","put","select","t0","console","log","_marked","_context2","takeEvery","_marked2","watchTasks","tasks_marked","_tasks","tasks_marked2","_context3","_marked3","rootSaga","all","sagas_marked","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","run","App","es","Container","containers_Timer_Timer","Tasks_Tabs_Tabs","src_components_TaskInfo","Boolean","window","hostname","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8dfd96e0.chunk.js","sourcesContent":["import React from 'react';\nimport './NotFound.scss';\n\nconst NotFound = () => (\n  <div className=\"not-found__wrapper\">\n    <div> 404 </div>\n  </div>\n);\n\nexport default NotFound;\n","export const AMOUNT_TASKS = {\n  MIN: 10,\n  MAX: 15,\n};\nexport const TASK_DURATION = {\n  MIN: 10,\n  MAX: 90,\n};\nexport const MIN = 1000 * 60;\n\nexport const FOTMAT = 'HH:mm:ss';\n\nexport const ROUTER = {\n  home: '/',\n  taskInfo: '/tasks/',\n  tasksLog: '/tasks/log',\n  tasksChart: '/tasks/chart',\n};\n","import { MIN, TASK_DURATION, AMOUNT_TASKS, FOTMAT } from 'utils/constants';\nimport moment from 'moment';\n\n/**\n * Get value from LocalStorage\n *\n * @param key\n * @param isNumber\n * @returns {number}\n */\nexport const getLS = (key, isNumber = true) =>\n  isNumber\n    ? Number(localStorage.getItem(key))\n    : JSON.parse(localStorage.getItem(key));\n\n/**\n * Set value from LocalStorage\n *\n * @param key\n * @param value\n * @param isNumber\n */\nexport const setLS = (key, value, isNumber = true) =>\n  isNumber\n    ? localStorage.setItem(key, value)\n    : localStorage.setItem(key, JSON.stringify(value));\n\n/**\n * Get current time\n *\n * @returns {number}\n */\nexport const currentTime = () => new Date().getTime();\n\n/**\n * Get format time for output display\n *\n * @param value\n * @param isUTC\n * @returns {string}\n */\nexport const getFormatTime = (value, isUTC) =>\n  isUTC ? moment.utc(+value).format(FOTMAT) : moment(+value).format(FOTMAT);\n\n/**\n * Generate new tasks\n *\n * @returns {Array}\n */\nexport const generateNewTasks = () => {\n  const date = new Date();\n  const amountTasks = _getRandomNumber(AMOUNT_TASKS.MIN, AMOUNT_TASKS.MAX);\n  let timeStart = Number(\n    new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime()\n  );\n\n  const newTasks = [];\n  for (let i = 0; i < amountTasks; i++) {\n    const timeEnd = _getNextTime(timeStart);\n\n    newTasks.push({\n      taskName: `Task ${i}`,\n      timeStart,\n      timeEnd,\n      timeSpend: timeEnd - timeStart,\n    });\n\n    timeStart = _getNextTime(timeEnd);\n  }\n  return newTasks;\n};\n\n/**\n * Get random time for task\n * @param time\n * @returns {*}\n * @private\n */\nfunction _getNextTime(time) {\n  return time + _getRandomNumber(TASK_DURATION.MIN, TASK_DURATION.MAX) * MIN;\n}\n\n/**\n * Get random number\n *\n * @param min\n * @param max\n * @returns {number}\n * @private\n */\nfunction _getRandomNumber(min, max) {\n  return Math.round(Math.random() * (max - min) + min);\n}\n\n/**\n * Convert format tasks for chart\n *\n * @param tasks\n * @returns {*}\n */\nexport const changeTaskFormat = tasks =>\n  tasks.map(task => {\n    return {\n      startHour: Number(moment(task.timeStart).format('H')),\n      startMin: Number(moment(task.timeStart).format('m')),\n      startSec: Number(moment(task.timeStart).format('s')),\n\n      endHour: Number(moment(task.timeEnd).format('H')),\n      endMin: Number(moment(task.timeEnd).format('m')),\n      endSec: Number(moment(task.timeEnd).format('s')),\n    };\n  });\n\n/**\n * Set columns for chart\n *\n * @param chartColumns\n * @param newTasksFormat\n * @returns {Array}\n */\nexport const setChartColumns = (chartColumns, newTasksFormat) => {\n  let columns = [...chartColumns];\n\n  for (const task of newTasksFormat) {\n    const diffHour = task.endHour - task.startHour;\n\n    if (diffHour > 0) {\n      for (let hour = task.startHour; hour < task.endHour; hour++) {\n        if (task.startHour === hour) {\n          columns[hour].uv += 60 - task.startMin;\n        } else {\n          columns[hour].uv =\n            columns[hour].uv < 60 ? columns[hour].uv + 60 : columns[hour].uv;\n        }\n      }\n      columns[task.endHour].uv += task.endMin;\n    } else if (diffHour === 0) {\n      columns[task.endHour].uv += task.endMin - task.startMin;\n    }\n  }\n\n  return columns;\n};\n\n/**\n * Get empty columns for chart\n *\n * @returns {Array}\n */\nexport const getDefaultChartColumns = () => {\n  const columns = [];\n  for (let i = 0; i < 24; i++) {\n    columns.push({\n      name: i,\n      uv: 0,\n    });\n  }\n  return columns;\n};\n\n/**\n * Helper for actions\n *\n * @param type\n * @param payload\n * @returns {{type: *, payload: *}}\n */\nexport const action = (type, payload) => {\n  return {\n    type,\n    payload,\n  };\n};\n","import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport Table from '@material-ui/core/Table/Table';\nimport TableBody from '@material-ui/core/TableBody/TableBody';\nimport TableRow from '@material-ui/core/TableRow/TableRow';\nimport TableCell from '@material-ui/core/TableCell/TableCell';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\n\nimport NotFound from 'containers/NotFound';\n\nimport { connect } from 'react-redux';\nimport { getFormatTime } from 'utils/utils';\nimport { ROUTER } from 'utils/constants';\n\nimport './TaskInfo.scss';\n\nconst TaskInfo = props => {\n  const { tasks, match } = props;\n  const task = tasks[match.params.id];\n\n  return (\n    <>\n      {typeof task !== 'undefined' ? (\n        <div className=\"task-info__wrapper\">\n          <Card className=\"task-info__card\">\n            <CardHeader title={`${task.taskName}`} />\n            <CardContent>\n              <Table>\n                <TableBody>\n                  <TableRow>\n                    <TableCell align=\"left\"> Time start: </TableCell>\n                    <TableCell align=\"left\">\n                      {getFormatTime(task.timeStart)}\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell align=\"left\"> Time end: </TableCell>\n                    <TableCell align=\"left\">\n                      {getFormatTime(task.timeEnd)}\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell align=\"left\"> Time spend: </TableCell>\n                    <TableCell align=\"left\">\n                      {getFormatTime(task.timeSpend, true)}\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </CardContent>\n            <CardActions style={{ justifyContent: 'flex-end' }}>\n              <Link to={ROUTER.tasksLog}>\n                <Button size=\"small\"> Back </Button>\n              </Link>\n            </CardActions>\n          </Card>\n        </div>\n      ) : (\n        <NotFound />\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = ({ tasks }) => {\n  return {\n    tasks,\n  };\n};\n\nexport default connect(mapStateToProps)(withRouter(TaskInfo));\n","import { action, getLS } from 'utils/utils';\n\nexport const SET_TASK = 'SET_TASK';\nexport const REMOVE_TASK = 'REMOVE_TASK';\nexport const REFRESH_TASKS = 'REFRESH_TASKS';\nexport const RESET_TASKS = 'RESET_TASKS';\n\nexport const setTask = payload => action(SET_TASK, payload);\nexport const removeTask = index => action(REMOVE_TASK, index);\nexport const refreshTasks = tasks => action(REFRESH_TASKS, tasks);\nexport const resetTasks = index => action(RESET_TASKS, index);\n\nconst initState = getLS('tasks', false) || [];\n\nexport const tasks = (state = initState, action) => {\n  switch (action.type) {\n    case SET_TASK:\n      return [...state, action.payload];\n\n    case REMOVE_TASK:\n      return [\n        ...state.slice(0, action.payload),\n        ...state.slice(action.payload + 1),\n      ];\n\n    case REFRESH_TASKS:\n      return action.payload;\n\n    case RESET_TASKS:\n      return [];\n\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nclass FormDialog extends React.Component {\n  render() {\n    const {\n      dialogTitle = '',\n      dialogContentText,\n      isOpenDialog,\n      clickDialogClose,\n      clickDialogSuccess = clickDialogClose,\n      btnSuccessText = 'Close',\n      btnRejectText = null,\n    } = this.props;\n\n    return (\n      <Dialog\n        fullWidth={true}\n        maxWidth=\"sm\"\n        open={isOpenDialog}\n        onClose={clickDialogClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\" style={{ textAlign: 'center' }}>\n          {dialogTitle}\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>{dialogContentText}</DialogContentText>\n          {this.props.children}\n        </DialogContent>\n\n        <DialogActions\n          style={{\n            justifyContent:\n              btnRejectText === null ? 'flex-end' : 'space-between',\n          }}\n        >\n          {btnRejectText !== null ? (\n            <Button onClick={clickDialogClose} color=\"primary\">\n              {btnRejectText}\n            </Button>\n          ) : null}\n          <Button onClick={clickDialogSuccess} color=\"primary\">\n            {btnSuccessText}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nexport default FormDialog;\n","import React from 'react';\nimport moment from 'moment';\n\nimport { FOTMAT } from 'utils/constants';\n\nconst INITIAL_TIME = '00:00:00';\n\nclass Clock extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      timeSpend: INITIAL_TIME,\n    };\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  start = () => {\n    this.interval = setInterval(this._tick, 500);\n  };\n\n  stop = () => {\n    clearInterval(this.interval);\n    this.setState({\n      timeSpend: INITIAL_TIME,\n    });\n  };\n\n  _tick = () => {\n    let { time, timeSpend: load } = this.props;\n\n    const timeSpend = moment.utc(new Date() - time + load).format(FOTMAT);\n\n    this.setState({\n      timeSpend,\n    });\n  };\n\n  render() {\n    return <>{this.state.timeSpend}</>;\n  }\n}\n\nexport default Clock;\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button/Button';\n\nimport { connect } from 'react-redux';\nimport { setTask } from 'store/modules/tasks';\nimport { getLS, setLS, currentTime } from 'utils/utils';\nimport Dialog from 'components/Dialog';\nimport Clock from 'containers/Timer/Clock';\n\nimport './Timer.scss';\n\nclass Timer extends React.Component {\n  constructor() {\n    super();\n\n    const isStartTimer = getLS('isStartTimer') || false;\n    const timeSpend = isStartTimer ? currentTime() - getLS('timeStart') : 0;\n\n    this.state = {\n      taskName: '',\n      initialTime: 0,\n      isStartTimer,\n      isOpenDialogNoName: false,\n      timeSpend,\n    };\n    this.clock = React.createRef();\n  }\n\n  componentDidMount() {\n    if (this.state.isStartTimer) {\n      this.startTimer();\n    }\n  }\n\n  toggleStatusTimer = () => {\n    if (this.state.isStartTimer) {\n      if (this.state.taskName === '') {\n        this._toggleDialogTaskNoName(true);\n      } else {\n        this._addTaskLog();\n      }\n    } else {\n      this.startTimer();\n      setLS('timeStart', currentTime());\n    }\n  };\n\n  startTimer = () => {\n    this.setState(() => {\n      return {\n        isStartTimer: true,\n        initialTime: currentTime(),\n      };\n    });\n    this.clock.current.start();\n    setLS('isStartTimer', 1);\n  };\n\n  stopTimer = () => {\n    this.clock.current.stop();\n    setLS('isStartTimer', 0);\n  };\n\n  handleChangeTaskName = event => {\n    this.setState({\n      taskName: event.target.value,\n    });\n  };\n\n  _addTaskLog = () => {\n    this.stopTimer();\n\n    const { taskName } = this.state;\n    const { setTask } = this.props;\n\n    const timeStart = getLS('timeStart');\n    let timeSpend = Math.round(currentTime() - timeStart);\n    let timeEnd = timeStart + timeSpend;\n\n    const sec = 1000;\n    if (timeSpend < sec && timeStart) {\n      timeSpend = sec;\n    }\n\n    setTask({\n      taskName,\n      timeStart,\n      timeEnd,\n      timeSpend,\n    });\n\n    this.setState({\n      taskName: '',\n      isStartTimer: false,\n      isOpenDialogNoName: false,\n    });\n  };\n\n  _toggleDialogTaskNoName = status =>\n    this.setState({ isOpenDialogNoName: status });\n\n  render() {\n    const {\n      taskName,\n      initialTime,\n      isStartTimer,\n      isOpenDialogNoName,\n      timeSpend,\n    } = this.state;\n\n    return (\n      <div className=\"timer__wrapper\">\n        <Dialog\n          isOpenDialog={isOpenDialogNoName}\n          clickDialogOpen={() => this._toggleDialogTaskNoName(true)}\n          clickDialogClose={() => this._toggleDialogTaskNoName(false)}\n          dialogTitle=\"Empty task name\"\n          dialogContentText=\"You are trying close your task without name, please enter the title and try gain!\"\n        />\n\n        <TextField\n          value={taskName}\n          onChange={this.handleChangeTaskName}\n          placeholder=\"Name of your task\"\n          className=\"timer__input\"\n        />\n        <Paper className=\"timer__clock\">\n          <Clock time={initialTime} timeSpend={timeSpend} ref={this.clock} />\n        </Paper>\n        <Button\n          variant=\"contained\"\n          className=\"btn timer__btn\"\n          onClick={() => this.toggleStatusTimer()}\n        >\n          {!isStartTimer ? 'Start' : 'Stop'}\n        </Button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ tasks }) => {\n  return {\n    tasks,\n  };\n};\n\nconst mapDispatchToProps = {\n  setTask,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Timer);\n","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst TasksNotFound = () => (\n  <TableRow>\n    <TableCell align=\"center\" colSpan=\"7\">\n      Tasks Not Found\n    </TableCell>\n  </TableRow>\n);\n\nexport default TasksNotFound;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport { ROUTER } from 'utils/constants';\n\nclass BtnInfo extends React.Component {\n  render() {\n    const { styleButton, index } = this.props;\n\n    return (\n      <Link to={`${ROUTER.taskInfo}${index}`}>\n        <Button variant=\"contained\" style={styleButton}>\n          Info\n        </Button>\n      </Link>\n    );\n  }\n}\n\nexport default BtnInfo;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport { connect } from 'react-redux';\nimport { removeTask } from 'store/modules/tasks';\n\nimport Dialog from 'components/Dialog';\n\nclass BtnRemove extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isOpenDialogRemove: false,\n    };\n  }\n\n  _toggleDialogRemove = status => this.setState({ isOpenDialogRemove: status });\n\n  render() {\n    const { isOpenDialogRemove } = this.state;\n    const { styleButton, taskIndex, removeTask } = this.props;\n\n    return (\n      <>\n        <Button\n          variant=\"contained\"\n          style={styleButton}\n          onClick={() => this._toggleDialogRemove(true)}\n        >\n          Delete\n        </Button>\n\n        <Dialog\n          isOpenDialog={isOpenDialogRemove}\n          clickDialogClose={() => this._toggleDialogRemove(false)}\n          clickDialogSuccess={() => {\n            this._toggleDialogRemove(false);\n            removeTask(taskIndex);\n          }}\n          btnRejectText=\"No\"\n          btnSuccessText=\"Yes\"\n          dialogTitle=\"You are sure?\"\n        />\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  removeTask,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(BtnRemove);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { getFormatTime } from 'utils/utils';\n\nimport BtnInfo from './BtnInfo';\nimport BtnRemove from './BtnRemove';\n\nimport './TasksRows.scss';\n\nconst styleButton = {\n  background: 'white',\n  borderRadius: 0,\n};\n\nclass TasksRows extends React.Component {\n  _getTimeEnd = task =>\n    getFormatTime(task.timeStart) === getFormatTime(task.timeEnd)\n      ? getFormatTime(task.timeEnd + 1000)\n      : getFormatTime(task.timeEnd);\n\n  render() {\n    return (\n      <>\n        {this.props.tasks.map((task, index) => (\n          <TableRow key={`task-body-${index}`}>\n            <TableCell component=\"th\" scope=\"row\">\n              {++index}\n            </TableCell>\n            <TableCell align=\"left\" className=\"table__col_task-name\">\n              {task.taskName}\n            </TableCell>\n            <TableCell align=\"center\">\n              {getFormatTime(task.timeStart)}\n            </TableCell>\n            <TableCell align=\"center\">{this._getTimeEnd(task)}</TableCell>\n            <TableCell align=\"center\">\n              {getFormatTime(task.timeSpend, true)}\n            </TableCell>\n            <TableCell align=\"center\">\n              <BtnInfo\n                index={--index}\n                task={task}\n                styleButton={styleButton}\n                getFormatTime={getFormatTime}\n              />\n            </TableCell>\n            <TableCell align=\"center\">\n              <BtnRemove taskIndex={index} styleButton={styleButton} />\n            </TableCell>\n          </TableRow>\n        ))}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ tasks }) => {\n  return {\n    tasks,\n  };\n};\n\nexport default connect(mapStateToProps)(TasksRows);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport { connect } from 'react-redux';\n\nimport TasksNotFound from './TasksNotFound';\nimport TasksRows from './TasksRows/TasksRows';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '100%',\n    overflowX: 'auto',\n    borderRadius: 0,\n  },\n  table: {\n    minWidth: 650,\n  },\n}));\n\nconst tableHeads = [\n  '№',\n  'Tasks',\n  'Time start',\n  'Time end',\n  'Time Spend',\n  'Info',\n  'Delete',\n];\n\nconst TableLog = ({ tasks }) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Paper className={classes.root}>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              {tableHeads.map((tableHead, index) => (\n                <TableCell key={`task-header-${index}`} align=\"center\">\n                  {tableHead}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {tasks.length ? <TasksRows /> : <TasksNotFound />}\n          </TableBody>\n        </Table>\n      </Paper>\n    </>\n  );\n};\n\nconst mapStateToProps = ({ tasks }) => {\n  return {\n    tasks,\n  };\n};\n\nexport default connect(mapStateToProps)(TableLog);\n","import { action, getDefaultChartColumns } from 'utils/utils';\n\nexport const BUILD_CHART = 'BUILD_CHART';\nexport const BUILD_CHART_SUCCESS = 'BUILD_CHART_SUCCESS';\nexport const BUILD_CHART_RESET = 'BUILD_CHART_RESET';\n\nexport const buildChart = () => action(BUILD_CHART);\nexport const buildChartReset = () => action(BUILD_CHART_RESET);\nexport const buildChartSuccess = chartColumns =>\n  action(BUILD_CHART_SUCCESS, chartColumns);\n\nconst initState = getDefaultChartColumns();\n\nexport const chartColumns = (state = initState, action) => {\n  switch (action.type) {\n    case BUILD_CHART_SUCCESS:\n      return action.payload;\n\n    case BUILD_CHART_RESET:\n      return getDefaultChartColumns();\n\n    default:\n      return state;\n  }\n};\n\nexport default chartColumns;\n","import React from 'react';\nimport Button from '@material-ui/core/Button/Button';\n\nimport { connect } from 'react-redux';\nimport { buildChart } from 'store/modules/chart';\nimport { setTask, resetTasks, refreshTasks } from 'store/modules/tasks';\nimport { generateNewTasks, setLS } from 'utils/utils';\n\nimport './BtnGenerate.scss';\n\nconst BtnGenerate = props => {\n  const _generate = async () => {\n    await props.resetTasks();\n    const newTasks = await generateNewTasks();\n    setLS('tasks', newTasks, false);\n    await props.refreshTasks(newTasks);\n    props.buildChart();\n  };\n\n  return (\n    <Button\n      variant=\"contained\"\n      className=\"btn btn__generate\"\n      onClick={() => _generate()}\n    >\n      Generate\n    </Button>\n  );\n};\n\nconst mapDispatchToProps = {\n  setTask,\n  refreshTasks,\n  resetTasks,\n  buildChart,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(BtnGenerate);\n","import React, { PureComponent } from 'react';\nimport {\n  ResponsiveContainer,\n  BarChart,\n  Bar,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n} from 'recharts';\n\nimport { connect } from 'react-redux';\nimport { buildChart } from 'store/modules/chart';\n\nimport BtnGenerate from './BtnGenerate/BtnGenerate';\n\nclass Chart extends PureComponent {\n  componentDidMount() {\n    this.props.buildChart();\n  }\n\n  render() {\n    return (\n      <>\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <BarChart data={this.props.chartColumns}>\n            <CartesianGrid stroke=\"#ccc\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis domain={[0, 60]} />\n            <Bar\n              type=\"monotone\"\n              dataKey=\"uv\"\n              barSize={30}\n              fill=\"#8884d8\"\n              label={renderLabel}\n            />\n          </BarChart>\n        </ResponsiveContainer>\n\n        <BtnGenerate />\n      </>\n    );\n  }\n}\n\nconst renderLabel = ({ payload, x, y, width, height, value }) => {\n  if (value > 0) {\n    let dy = 16;\n    let fill = '#fff';\n\n    if (value <= 5) {\n      dy = -6;\n      fill = '#000';\n    }\n\n    return (\n      <text x={x + width / 2} y={y} fill={fill} textAnchor=\"middle\" dy={dy}>\n        {value}\n      </text>\n    );\n  } else {\n    return null;\n  }\n};\n\nconst mapStateToProps = ({ chartColumns }) => {\n  return {\n    chartColumns,\n  };\n};\n\nconst mapDispatchToProps = {\n  buildChart,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Chart);\n","import React from 'react';\nimport { Link, Route, Switch, withRouter } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport TasksLog from '../TableLog/TableLog';\nimport TasksChart from '../Chart/Chart';\n\nimport { ROUTER } from 'utils/constants';\n\nimport './Tabs.scss';\n\nclass NavTabs extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      activeTabIndex: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      activeTabIndex:\n        this.props.location.pathname === ROUTER.tasksChart ? 1 : 0,\n    });\n  }\n\n  handleChange = (event, activeTabIndex) => {\n    this.setState({\n      activeTabIndex,\n    });\n  };\n\n  render() {\n    const { activeTabIndex } = this.state;\n\n    return (\n      <div className=\"tabs__wrapper\">\n        <AppBar position=\"static\">\n          <Tabs\n            variant=\"fullWidth\"\n            value={activeTabIndex}\n            onChange={this.handleChange}\n          >\n            <Tab label=\"Task Log\" component={Link} to={ROUTER.tasksLog} />\n            <Tab label=\"Task Chart\" component={Link} to={ROUTER.tasksChart} />\n          </Tabs>\n        </AppBar>\n        <Switch>\n          <Route\n            exact\n            path={[ROUTER.tasksLog, ROUTER.home]}\n            component={TasksLog}\n          />\n          <Route exact path={ROUTER.tasksChart} component={TasksChart} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(NavTabs);\n","import { combineReducers } from 'redux';\nimport { tasks } from './modules/tasks';\nimport { chartColumns } from './modules/chart';\n\nexport default combineReducers({\n  tasks,\n  chartColumns,\n});\n","import { put, call, select, takeEvery } from 'redux-saga/effects';\nimport {\n  BUILD_CHART,\n  buildChartReset,\n  buildChartSuccess,\n} from 'store/modules/chart';\nimport { changeTaskFormat, setChartColumns } from 'utils/utils';\n\nfunction* buildChart() {\n  try {\n    yield put(buildChartReset());\n\n    const { tasks, chartColumns } = yield select();\n    const newTasksFormat = yield call(() => changeTaskFormat(tasks));\n    const chartColumnsWithValue = yield call(() =>\n      setChartColumns(chartColumns, newTasksFormat)\n    );\n\n    yield put(buildChartSuccess(chartColumnsWithValue));\n  } catch (error) {\n    console.log('error: ', error);\n  }\n}\n\nexport function* watchBuildChart() {\n  yield takeEvery(BUILD_CHART, buildChart);\n}\n","import { takeEvery, select } from 'redux-saga/effects';\nimport { setLS } from 'utils/utils';\nimport { SET_TASK, REMOVE_TASK } from 'store/modules/tasks';\n\nfunction* setTask() {\n  try {\n    const { tasks } = yield select();\n    setLS('tasks', tasks, false);\n  } catch (error) {\n    console.log('error: ', error);\n  }\n}\nfunction* removeTask() {\n  try {\n    const { tasks } = yield select();\n    setLS('tasks', tasks, false);\n  } catch (error) {\n    console.log('error: ', error);\n  }\n}\n\nexport function* watchTasks() {\n  yield takeEvery(SET_TASK, setTask);\n  yield takeEvery(REMOVE_TASK, removeTask);\n}\n","import { all } from 'redux-saga/effects';\n\nimport { watchBuildChart } from './buildChart';\nimport { watchTasks } from './tasks';\n\nexport default function* rootSaga() {\n  yield all([watchBuildChart(), watchTasks()]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './rootReducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Container from '@material-ui/core/Container';\n\nimport TaskInfo from 'components/TaskInfo';\nimport Timer from 'containers/Timer/Timer';\nimport Tabs from 'containers/Tasks/Tabs/Tabs';\nimport NotFound from 'containers/NotFound';\n\nimport { ROUTER } from 'utils/constants';\nimport store from 'store';\n\nconst App = () => (\n  <Provider store={store}>\n    <Container>\n      <BrowserRouter>\n        <Switch>\n          <Route path={[ROUTER.home, ROUTER.tasksLog, ROUTER.tasksChart]} exact>\n            <Timer />\n            <Tabs />\n          </Route>\n\n          <Route path={`${ROUTER.taskInfo}:id`}>\n            <TaskInfo />\n          </Route>\n\n          <Route component={NotFound} />\n        </Switch>\n      </BrowserRouter>\n    </Container>\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'scss/index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}